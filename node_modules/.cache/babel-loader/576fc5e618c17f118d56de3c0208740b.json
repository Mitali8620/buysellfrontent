{"ast":null,"code":"import { useI18n } from 'vue-i18n';\nimport { i18n } from '@/assets/locales/index';\nimport PsUtils from '@/utils/PsUtils';\nimport { defineComponent, ref, watch } from \"vue\";\nimport { useUserProviderState } from '@/store/modules/user/UserProvider';\nimport { PsValueProvider } from '@/store/modules/core/PsValueProvider';\nimport router from '@/router';\nimport Velocity from \"velocity-animate\";\nimport PsConfig from '@/config/PsConfig'; //import $ from \"cash-dom\";\n\nimport PsIcon from '@/components/core/icons/PsIcon.vue';\nimport PsDropdown from '@/components/core/dropdown/PsDropdown.vue';\nimport PsLine from \"@/components/core/line/PsLine.vue\";\nimport PsRouteLink from '@/components/core/link/PsRouteLink.vue';\nimport { useRoute } from \"vue-router\";\nimport PsLabel from \"@/components/core/label/PsLabel.vue\";\nexport default defineComponent({\n  components: {\n    PsIcon,\n    PsDropdown,\n    PsLine,\n    PsRouteLink,\n    PsLabel\n  },\n  props: {\n    topOfPage: {\n      type: Boolean,\n      default: false\n    }\n  },\n\n  setup() {\n    const activeMobileMenu = ref(false);\n    const userProvider = useUserProviderState();\n    const activeLanguage = ref(PsConfig.defaultLanguage);\n    const supportedLanguages = PsConfig.supportedLanguages;\n    let psValueHolder = PsValueProvider.psValueHolder;\n\n    if (psValueHolder.isUserLoggedIn()) {\n      userProvider.getUser(psValueHolder.loginUserId);\n    }\n\n    watch(() => psValueHolder.isUserLoggedIn(), (currentValue, oldValue) => {\n      if (currentValue) {\n        userProvider.getUser(psValueHolder.loginUserId);\n      } else {\n        PsUtils.log(oldValue);\n      }\n    });\n\n    function userNameClicked() {\n      PsValueProvider.psValueHolder.loadData();\n      psValueHolder = PsValueProvider.psValueHolder;\n    }\n\n    function gotToHome() {\n      router.push({\n        name: \"dashboard\"\n      });\n    }\n\n    function toggleMobileMenu(bol = true) {\n      if (bol) {\n        activeMobileMenu.value = !activeMobileMenu.value;\n      }\n    }\n\n    function enter(el, done) {\n      Velocity(el, \"slideDown\", {\n        duration: 300\n      }, {\n        complete: done\n      });\n    }\n\n    function leave(el, done) {\n      Velocity(el, \"slideUp\", {\n        duration: 300\n      }, {\n        complete: done\n      });\n    }\n\n    function clickLogout() {\n      psValueHolder.logout();\n      router.push({\n        name: \"dashboard\"\n      });\n    }\n\n    const route = useRoute();\n\n    function registerClicked() {\n      if (activeMobileMenu.value) {\n        activeMobileMenu.value = false;\n      }\n\n      let tempParams = {};\n      tempParams = route.query;\n      tempParams['redirect'] = route.name;\n      router.push({\n        name: 'register',\n        query: tempParams,\n        params: route.params\n      });\n    }\n\n    function loginClicked() {\n      if (activeMobileMenu.value) {\n        activeMobileMenu.value = false;\n      }\n\n      let tempParams = {};\n      tempParams = route.query;\n      tempParams['redirect'] = route.name;\n      router.push({\n        name: 'login',\n        query: tempParams,\n        params: route.params\n      });\n    } //language selection\n\n\n    const t = useI18n;\n\n    function changeLanguage(language) {\n      i18n.global.locale = language.languageCode;\n      i18n.global.fallbackLocale = language.languageCode;\n      activeLanguage.value = language;\n    } //light / dark mode\n\n\n    const isDarkMode = ref(true);\n\n    function toggleDarkMode() {\n      if (localStorage.isDarkMode != null && localStorage.isDarkMode == 'true') {\n        localStorage.isDarkMode = 'false';\n        isDarkMode.value = false;\n      } else {\n        localStorage.isDarkMode = 'true';\n        isDarkMode.value = true;\n      }\n\n      loadIsDarkMode();\n    }\n\n    loadIsDarkMode();\n\n    function loadIsDarkMode() {\n      if (localStorage.isDarkMode != null && localStorage.isDarkMode == 'true') {\n        document.documentElement.classList.add('dark');\n        isDarkMode.value = true;\n      } else {\n        document.documentElement.classList.remove('dark');\n        isDarkMode.value = false;\n      }\n    }\n\n    return {\n      toggleDarkMode,\n      isDarkMode,\n      activeMobileMenu,\n      psValueHolder,\n      userProvider,\n      gotToHome,\n      enter,\n      leave,\n      toggleMobileMenu,\n      clickLogout,\n      loginClicked,\n      userNameClicked,\n      registerClicked,\n      activeLanguage,\n      supportedLanguages,\n      changeLanguage,\n      t\n    };\n  }\n\n});","map":{"version":3,"sources":["/Users/parth/Desktop/buysellfrontent/src/components/layouts/navbar/PsNavBar.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n\n    <nav class=\"flex flex-col fixed w-full h-16 z-40 bg-background dark:bg-backgroundDark border-b border-secondary-500 dark:border-backgrounDark\" \n        :class=\"topOfPage ? 'mt-8 lg:mt-12' : 'mt-0'\" >\n        <div class=\"flex justify-between items-center content-center my-auto w-mobile sm:w-median lg:w-large mx-auto\">\n            \n            <div class=' flex flex-row w-full rounded-xl'>\n                \n          \n                <div class=\"my-auto font-medium w-44\"> \n                    <img src=\"@/assets/images/fbs_icon.png\" @click=\"gotToHome\" alt=\"Navbar logo\" class=\" rounded:xl w-auto sm:h-10 h-8 cursor-pointer object-cover \"/>   \n                </div>\n                \n            </div>\n            <div> \n                \n            </div>\n            \n            \n            <div class=\"flex items-center content-center me-2\">\n                <ps-route-link :to=\"{name: 'item-entry' }\">\n                <ps-label class=' bg-primary-500 dark:bg-primaryDark-accent lg:rounded-2xl rounded-xl ps-4 pb-1.5 pt-0.5 font-medium cursor-pointer sm:text-xs sm:w-28 w-10 pe-7 sm:pe-0' textColor=\"text-textLight dark:text-textDark\" > \n                    <div class='flex flex-row items-center pt-1'> \n                        <span class=\"hidden sm:inline-block sm:me-2 \"> {{ $t(\"ps_nav_bar__new_post\") }} </span>\n                        <span class=\"text-xl \"> + </span> </div>\n                </ps-label>\n                \n                </ps-route-link>\n            </div>\n            <div class=\"items-center content-center hidden sm:flex \">\n\n                <div v-if=\"psValueHolder.isUserLoggedIn()\" class=\"flex items-center content-center\">\n\n                    <div class=\" h-12 flex items-center justify-center me-2 \">\n                        <ps-route-link\n                            aria-label=\"Noti\"     \n                            :to=\"{name: 'notification-list' }\"> \n                            <div   >                                \n                                <ps-icon textColor=\"text-secondary-400 dark:text-secondaryDark-grey\" name=\"bell\" h=\"20\" w=\"20\"/>\n                            </div>\n                        </ps-route-link>\n                            \n                    </div>\n                    <div class=\" h-12 flex items-center justify-center me-4 \">\n                        <ps-route-link\n                           aria-label=\"Message\"     \n                            :to=\"{name: 'chat-list' }\"> \n                            <div   >\n                                <ps-icon textColor=\"text-secondary-400 dark:text-secondaryDark-grey\" name=\"chatalt2\" h=\"20\" w=\"20\"/>  \n                                \n                            </div>\n                        </ps-route-link>\n                            \n                    </div>\n                    <ps-dropdown align=\"right\" h=\"h-72\" class=' z-50' >\n                        <template #select >\n                            <ps-label class=\" h-full\" @click='userNameClicked'>\n                                \n                                <button\n                                    type=\"button\"\n                                    class=\"inline-flex items-center content-start justify-between w-full h-12 \n                                             leading-5 font-medium text-base\n                                             focus:outline-none transition \n                                             ease-in-out duration-150 btn-focus\"\n                                \n                                    :id=\"userProvider.user?.data?.id\"\n                                    aria-haspopup=\"true\"\n                                    aria-expanded=\"true\" >\n                                    \n                                    <img alt=\"Placeholder\" class=\"rounded-full bg-transparent w-8 h-8 flex items-center justify-center object-cover\" width='50px' height='50px' v-lazy=\"userProvider.imageUrl(userProvider.user?.data?.userProfilePhoto, 1)\" @error=\"userProvider.defaultProfileImage\" >\n                                    \n                                    <ps-icon textColor=\"text-secondary-400 dark:text-secondaryDark-grey\" name=\"downArrow\"  w='52' h='52' class=\"\"  />\n                                    \n                                </button>\n                            </ps-label>\n                        </template>\n                        <template #list >\n                            <div\n                                class=\"rounded-md bg-white shadow-xs w-56 z-50\" \n                                role=\"menu\"\n                                aria-orientation=\"vertical\"\n                                aria-labelledby=\"options-menu\">\n                                <div class=\"pt-2 z-30 absolute\">\n                                    \n                                    <ps-route-link\n                                        textSize=\"text-sm\"\n                                        :to=\"{name: 'profile' }\"> \n                                        <div class=\"w-56 py-4 px-2 hover:bg-primary-000 dark:hover:bg-primaryDark-black cursor-pointer items-center\"  >\n                                            <ps-label class=\"ms-2 text-secondary-500 font-medium\"  > {{ $t(\"ps_nav_bar__profile\") }} </ps-label>                                        \n                                        </div>\n                                    </ps-route-link>\n\n                                    <ps-route-link\n                                        textSize=\"text-sm\"\n                                        :to=\"{name: 'chat-list' }\"> \n                                        <div class=\"w-56 py-4 px-2 hover:bg-primary-000 dark:hover:bg-primaryDark-black cursor-pointer items-center\"  >\n                                            <ps-label class=\"ms-2 text-secondary-500 font-medium\"  > {{ $t(\"ps_nav_bar__message\") }} </ps-label>                                        \n                                        </div>\n                                    </ps-route-link>\n\n                                    <ps-route-link\n                                        textSize=\"text-sm\"\n                                        :to=\"{name: 'favourite' }\"> \n                                        <div class=\"w-56 py-4 px-2 hover:bg-primary-000 dark:hover:bg-primaryDark-black cursor-pointer items-center\"  >\n                                            <ps-label class=\"ms-2 text-secondary-500 font-medium\"  > {{ $t(\"ps_nav_bar__favourite\") }} </ps-label>                                        \n                                        </div>\n                                    </ps-route-link>\n\n                                    <ps-route-link\n                                        textSize=\"text-sm\"\n                                        :to=\"{name: 'notification-list' }\"> \n                                        <div class=\"w-56 py-4 px-2 hover:bg-primary-000 dark:hover:bg-primaryDark-black cursor-pointer items-center\"  >\n                                            <ps-label class=\"ms-2 text-secondary-500 font-medium\"  > {{ $t(\"ps_nav_bar__notification\") }} </ps-label>                                        \n                                        </div>\n                                    </ps-route-link>\n\n                                    <ps-line />\n\n                                    <div class=\"w-56 py-4 px-2 hover:bg-primary-000 dark:hover:bg-primaryDark-black cursor-pointer items-center\" @click=\"clickLogout\"  >\n                                        <ps-label class=\"ms-2 text-secondary-500 font-medium\"  > {{ $t(\"ps_nav_bar__logout\") }} </ps-label>                                        \n                                    </div>\n                                </div>\n                                <div class=\"border-t border-gray-100 \"></div>\n                            </div>\n                        </template>\n                    </ps-dropdown>\n\n                   \n                </div>\n\n                <div v-else class=\"flex flex-row\">\n                    <div class=\"h-16 flex items-center content-center cursor-pointer \">\n                        <ps-label @click=\"loginClicked\" class='font-medium border text-xxs sm:text-xs border-primary-500 dark:border-primaryDark-accent lg:rounded-2xl rounded-xl px-4 py-2 cursor-pointer me-2 ' textColor=\"text-primary-500 dark:text-primaryDark-accent\" >\n                             {{ $t(\"ps_nav_bar__login\") }} \n                        </ps-label>                       \n                    </div>\n                    <div class=\"h-16 flex items-center content-center cursor-pointer\">\n                        <ps-label @click=\"registerClicked\" class='font-medium bg-primary-500 dark:bg-primaryDark-accent text-xxs sm:text-xs lg:rounded-2xl rounded-xl px-4 py-2 cursor-pointer '  textColor=\"text-textLight dark:text-textDark\" > \n                            {{ $t(\"ps_nav_bar__register\") }} \n                        </ps-label>                        \n                    </div>\n                </div>\n            </div>\n\n            <div class =\"sm:hidden flex h-16 items-center\">\n                <ps-icon name=\"menu\" class=\"cursor-pointer\" @click=\"toggleMobileMenu\" />            \n            </div>\n        </div>\n        <div>\n            <transition @enter=\"enter\" @leave=\"leave\" >\n                <div v-if=\"activeMobileMenu\" class=\"border border-b-2 text-primary-500 dark:text-textdark-500 h-auto mt-0 bg-background dark:bg-backgroundDark pb-1\">\n                <div  class=\"flex flex-col \" >\n                    <div v-if=\"psValueHolder.isUserLoggedIn()\">             \n                        <ps-route-link\n                            textSize=\"text-md\"\n                            :to=\"{name: 'profile' }\"> \n                            <div class=\"w-full py-4 px-2 hover:bg-primary-000 dark:hover:bg-primaryDark-black cursor-pointer items-center\" @click=\"toggleMobileMenu\" >\n                                <ps-label class=\"ms-2 text-secondary-500 font-medium\"  > {{ $t(\"ps_nav_bar__profile\") }} </ps-label>                                        \n                            </div>\n                        </ps-route-link>\n\n                        <ps-route-link\n                            textSize=\"text-md\"\n                            :to=\"{name: 'chat-list' }\"> \n                            <div class=\"w-full py-4 px-2 hover:bg-primary-000 dark:hover:bg-primaryDark-black cursor-pointer items-center\" @click=\"toggleMobileMenu\" >\n                                <ps-label class=\"ms-2 text-secondary-500 font-medium\"  > {{ $t(\"ps_nav_bar__message\") }} </ps-label>                                        \n                            </div>\n                        </ps-route-link>\n\n                        <ps-route-link\n                            textSize=\"text-md\"\n                            :to=\"{name: 'favourite' }\"> \n                            <div class=\"w-full py-4 px-2 hover:bg-primary-000 dark:hover:bg-primaryDark-black cursor-pointer items-center\"  @click=\"toggleMobileMenu\">\n                                <ps-label class=\"ms-2 text-secondary-500 font-medium\"  > {{ $t(\"ps_nav_bar__favourite\") }} </ps-label>                                        \n                            </div>\n                        </ps-route-link>\n\n                        <ps-route-link\n                            textSize=\"text-md\"\n                            :to=\"{name: 'notification-list' }\"> \n                            <div class=\"w-full py-4 px-2 hover:bg-primary-000 dark:hover:bg-primaryDark-black cursor-pointer items-center\" @click=\"toggleMobileMenu\" >\n                                <ps-label class=\"ms-2 text-secondary-500 font-medium\"  > {{ $t(\"ps_nav_bar__notification\") }} </ps-label>                                        \n                            </div>\n                        </ps-route-link>\n\n                        <ps-line class=\" ms-4 me-12\"/>\n\n                        <div class=\"w-full px-2 py-4 hover:bg-primary-000 dark:hover:bg-primaryDark-black cursor-pointer items-center\" @click=\"clickLogout\"  >\n                            <ps-label class=\"ms-2 text-secondary-500 font-medium\"  > {{ $t(\"ps_nav_bar__logout\") }} </ps-label>                                        \n                        </div>\n                        \n\n                    </div>\n\n                    <div v-else >\n                        <ps-line />\n                        <ps-label  class=' w-full hover:bg-primary-000 dark:hover:bg-primaryDark-black py-4 px-4 cursor-pointer'  @click=\"loginClicked\"> Login </ps-label>\n                        <ps-label  class=' w-full hover:bg-primary-000 dark:hover:bg-primaryDark-black py-4 px-4 cursor-pointer'  @click=\"registerClicked\"> Register </ps-label>\n                    </div>\n                    \n                </div>\n                </div>\n                </transition>\n        </div>\n        \n    </nav>\n</template>\n\n<script>\nimport { useI18n } from 'vue-i18n';\nimport { i18n } from '@/assets/locales/index';\nimport PsUtils from '@/utils/PsUtils';\n\nimport { defineComponent, ref, watch } from \"vue\";\nimport { useUserProviderState } from '@/store/modules/user/UserProvider';\nimport { PsValueProvider } from '@/store/modules/core/PsValueProvider';\n\nimport router from '@/router';\nimport Velocity from \"velocity-animate\";\nimport PsConfig from '@/config/PsConfig';\n//import $ from \"cash-dom\";\n\nimport PsIcon from '@/components/core/icons/PsIcon.vue';\nimport PsDropdown from '@/components/core/dropdown/PsDropdown.vue';\nimport PsLine from \"@/components/core/line/PsLine.vue\";\nimport PsRouteLink from '@/components/core/link/PsRouteLink.vue';\nimport { useRoute } from \"vue-router\";\nimport PsLabel from \"@/components/core/label/PsLabel.vue\";\n\nexport default defineComponent ({\n    components : {\n        PsIcon,\n        PsDropdown,\n        PsLine,\n        PsRouteLink,\n        PsLabel\n    },\n    props : {\n        topOfPage : {\n            type: Boolean,\n            default : false\n        }\n    },\n    setup() {\n\n        const activeMobileMenu = ref(false);\n        const userProvider = useUserProviderState();   \n        const activeLanguage = ref(PsConfig.defaultLanguage);\n        const supportedLanguages = PsConfig.supportedLanguages;  \n\n        let psValueHolder = PsValueProvider.psValueHolder;\n\n        if (psValueHolder.isUserLoggedIn()) {               \n            userProvider.getUser(psValueHolder.loginUserId);\n            \n        }\n        watch(() => psValueHolder.isUserLoggedIn(), (currentValue, oldValue) => {\n            if (currentValue) {               \n                userProvider.getUser(psValueHolder.loginUserId);                \n            }\n            else{\n                PsUtils.log(oldValue);\n            }\n        })\n        \n        function userNameClicked() {\n            PsValueProvider.psValueHolder.loadData();\n            psValueHolder= PsValueProvider.psValueHolder;\n        }\n        \n        function gotToHome() {\n            router.push({name : \"dashboard\"});\n        }\n\n        function toggleMobileMenu( bol = true) {\n            if(bol){\n                activeMobileMenu.value = !activeMobileMenu.value;\n            }\t\t\t\n\t\t}\n\n        function enter(el, done) {\n\t\t\tVelocity(\n\t\t\t\tel,\n\t\t\t\t\"slideDown\",\n\t\t\t\t{\n\t\t\t\tduration: 300\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\tcomplete: done\n\t\t\t\t}\n\t\t\t);\n        }\n        \n\t\tfunction leave(el, done) {\n\t\t\tVelocity(\n\t\t\t\tel,\n\t\t\t\t\"slideUp\",\n\t\t\t\t{\n\t\t\t\tduration: 300\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\tcomplete: done\n\t\t\t\t}\n\t\t\t);\n        }\n\n        function clickLogout() {\n            psValueHolder.logout();\n            router.push({name : \"dashboard\"});\n        }\n        const route = useRoute();\n        function registerClicked() {\n       \n            if(activeMobileMenu.value) {\n                activeMobileMenu.value = false;\n            }\n\n            let tempParams = {};\n            tempParams = route.query;\n            tempParams['redirect'] = route.name;\n            router.push({name : 'register', query : tempParams, params : route.params });\n        } \n        function loginClicked() {\n       \n            if(activeMobileMenu.value) {\n                activeMobileMenu.value = false;\n            }\n\n            let tempParams = {};\n            tempParams = route.query;\n            tempParams['redirect'] = route.name;\n            router.push({name : 'login', query : tempParams, params : route.params });\n        }\n        //language selection\n        const t = useI18n;\n        function changeLanguage(language){\n            \n            i18n.global.locale = language.languageCode;\n            i18n.global.fallbackLocale = language.languageCode;\n            activeLanguage.value = language;\n        }\n        //light / dark mode\n        const isDarkMode = ref(true);\n        function toggleDarkMode() {\n            \n            if(localStorage.isDarkMode != null && localStorage.isDarkMode == 'true') {\n                localStorage.isDarkMode = 'false';\n                isDarkMode.value = false;\n            }else {\n                localStorage.isDarkMode = 'true';\n                isDarkMode.value = true;\n            }\n            loadIsDarkMode();\n        }\n\n        loadIsDarkMode();\n        function loadIsDarkMode() {\n\n            if (localStorage.isDarkMode != null && localStorage.isDarkMode == 'true') {\n                document.documentElement.classList.add('dark')\n                isDarkMode.value = true;\n            } else {\n                document.documentElement.classList.remove('dark')\n                isDarkMode.value = false;\n            }\n\n        }\n        \n        return {\n            toggleDarkMode,\n            isDarkMode,\n            activeMobileMenu,\n            psValueHolder,\n            userProvider,\n            gotToHome,\n            enter,\n            leave,\n            toggleMobileMenu,\n            clickLogout,\n            loginClicked,\n            userNameClicked,\n            registerClicked,\n            activeLanguage,\n            supportedLanguages,\n            changeLanguage,\n            t,\n        }\n\n    }\n});\n</script>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}